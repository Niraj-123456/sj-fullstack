# # Linux + Node + Source + Project dependencies + build assets
# # FROM node:12.13-alpine  AS prodbuild
# FROM node:16.3.0-alpine  AS dependencies

# #### ARGS ##########
# ARG NODE_ENV
# ARG NEXT_PUBLIC_NODE_API_BASE_URL
# ARG NEXT_PUBLIC_NODE_API_VERSION

# ARG NEXT_PUBLIC_FRONTEND_HOST
# ARG NEXT_PUBLIC_FRONTEND_HOST_IP
# ARG NEXT_PUBLIC_FRONTEND_HOST_PORT

# ARG NEXT_PUBLIC_PC_BROWSER_KEY_CLIENT_KEY
# ARG NEXT_PUBLIC_ANDROID_BROWSER_CLIENT_KEY
# ARG NEXT_PUBLIC_ANDROID_APP_CLIENT_KEY
# ARG NEXT_PUBLIC_IOS_BROWSER_CLIENT_KEY
# ARG NEXT_PUBLIC_IOS_APP_CLIENT_KEY

# #### ENVS ##########
# ENV NODE_ENV $NODE_ENV
# ENV NEXT_PUBLIC_NODE_API_BASE_URL $NEXT_PUBLIC_NODE_API_BASE_URL
# ENV NEXT_PUBLIC_NODE_API_VERSION $NEXT_PUBLIC_NODE_API_VERSION

# ENV NEXT_PUBLIC_FRONTEND_HOST $NEXT_PUBLIC_FRONTEND_HOST
# ENV NEXT_PUBLIC_FRONTEND_HOST_IP $NEXT_PUBLIC_FRONTEND_HOST_IP
# ENV NEXT_PUBLIC_FRONTEND_HOST_PORT $NEXT_PUBLIC_FRONTEND_HOST_PORT

# ENV NEXT_PUBLIC_PC_BROWSER_KEY_CLIENT_KEY $NEXT_PUBLIC_PC_BROWSER_KEY_CLIENT_KEY
# ENV NEXT_PUBLIC_ANDROID_BROWSER_CLIENT_KEY $NEXT_PUBLIC_ANDROID_BROWSER_CLIENT_KEY
# ENV NEXT_PUBLIC_ANDROID_APP_CLIENT_KEY $NEXT_PUBLIC_ANDROID_APP_CLIENT_KEY
# ENV NEXT_PUBLIC_IOS_BROWSER_CLIENT_KEY $NEXT_PUBLIC_IOS_BROWSER_CLIENT_KEY
# ENV NEXT_PUBLIC_IOS_APP_CLIENT_KEY $NEXT_PUBLIC_IOS_APP_CLIENT_KEY

# ENV NODE_ENV=production

# WORKDIR /app
# COPY package*.json ./
# # RUN npm ci
# RUN npm install

# COPY . .
# # COPY . .
# # RUN npm install ci
# RUN npm run build
# RUN apk add tree && tree -d ./
# RUN ls -a pages
# RUN ls -a .next
# # RUN ls -a build



# # FROM nginx:1.17-alpine as production
# FROM nginx:1.21.6-alpine as production
# COPY --from=prodbuild /app/build /usr/share/nginx/html
# RUN rm /etc/nginx/conf.d/default.conf

# COPY nginx/conf/nginx.conf /etc/nginx/conf.d
# CMD  nginx -s reload
# # CMD npm run start


##################################################################################3
# 1. Install dependencies only when needed
FROM node:16-alpine AS dependencies
# Check https://github.com/nodejs/docker-node/tree/b4117f9333da4138b03a546ec926ef50a31506c3#nodealpine to understand why libc6-compat might be needed.
# RUN apk add --no-cache libc6-compat

WORKDIR /app

# Install dependencies based on the preferred package manager
COPY package.json yarn.lock* package-lock.json* pnpm-lock.yaml* ./
RUN npm install

# 2. Rebuild the source code only when needed
FROM node:16-alpine AS runner
WORKDIR /app
COPY --from=dependencies /app/node_modules ./node_modules
COPY . .

#### ARGS ##########
ARG NODE_ENV
ARG NEXT_PUBLIC_NODE_API_BASE_URL
ARG NEXT_PUBLIC_NODE_API_VERSION

ARG NEXT_PUBLIC_FRONTEND_HOST
ARG NEXT_PUBLIC_FRONTEND_HOST_IP
ARG NEXT_PUBLIC_FRONTEND_HOST_PORT

ARG NEXT_PUBLIC_PC_BROWSER_KEY_CLIENT_KEY
ARG NEXT_PUBLIC_ANDROID_BROWSER_CLIENT_KEY
ARG NEXT_PUBLIC_ANDROID_APP_CLIENT_KEY
ARG NEXT_PUBLIC_IOS_BROWSER_CLIENT_KEY
ARG NEXT_PUBLIC_IOS_APP_CLIENT_KEY

#### ENVS ##########
ENV NODE_ENV $NODE_ENV
ENV NEXT_PUBLIC_NODE_API_BASE_URL $NEXT_PUBLIC_NODE_API_BASE_URL
ENV NEXT_PUBLIC_NODE_API_VERSION $NEXT_PUBLIC_NODE_API_VERSION

ENV NEXT_PUBLIC_FRONTEND_HOST $NEXT_PUBLIC_FRONTEND_HOST
ENV NEXT_PUBLIC_FRONTEND_HOST_IP $NEXT_PUBLIC_FRONTEND_HOST_IP
ENV NEXT_PUBLIC_FRONTEND_HOST_PORT $NEXT_PUBLIC_FRONTEND_HOST_PORT

ENV NEXT_PUBLIC_PC_BROWSER_KEY_CLIENT_KEY $NEXT_PUBLIC_PC_BROWSER_KEY_CLIENT_KEY
ENV NEXT_PUBLIC_ANDROID_BROWSER_CLIENT_KEY $NEXT_PUBLIC_ANDROID_BROWSER_CLIENT_KEY
ENV NEXT_PUBLIC_ANDROID_APP_CLIENT_KEY $NEXT_PUBLIC_ANDROID_APP_CLIENT_KEY
ENV NEXT_PUBLIC_IOS_BROWSER_CLIENT_KEY $NEXT_PUBLIC_IOS_BROWSER_CLIENT_KEY
ENV NEXT_PUBLIC_IOS_APP_CLIENT_KEY $NEXT_PUBLIC_IOS_APP_CLIENT_KEY

ENV NODE_ENV=production

# This will do the trick, use the corresponding env file for each environment.
COPY .env.production .env
RUN npm run build

# remove dev dependencies
RUN npm prune --production

EXPOSE $NEXT_PUBLIC_FRONTEND_HOST_PORT
CMD ["npm", "run","start:prod"]

# # 3. Production image, copy all the files and run next
# FROM node:16-alpine AS runner
# WORKDIR /app

# COPY --from=builder /app/package.json ./package.json
# COPY --from=builder /app/node_modules ./node_modules
# COPY --from=builder /app/.next ./.next
# COPY --from=builder /app/public ./public
# EXPOSE 3000
# CMD ["npm", "run","start"]

